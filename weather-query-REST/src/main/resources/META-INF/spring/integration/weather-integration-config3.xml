<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int-webflux="http://www.springframework.org/schema/integration/webflux"
       xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xsi:schemaLocation="
            http://www.springframework.org/schema/integration/xml
            http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
            http://www.springframework.org/schema/integration/ws
            http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/integration
            http://www.springframework.org/schema/integration/spring-integration.xsd
            http://www.springframework.org/schema/integration/http
            http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
            http://www.springframework.org/schema/integration/ws
            http://www.sprintframework.org/schema/integration/ws/spring-int
            http://www.springframework.org/schema/integration/webflux
            http://www.springframework.org/schema/integration/webflux/spring-integration-webflux.xsd">


    <context:property-placeholder location="classpath:integration.properties"/>
    <int:annotation-config/>
    <context:component-scan base-package="com.caih.iexp.utils"/>

<!--    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:integration.properties"/>
    </bean>-->

    <!--<int:channel id="reply-channel"/>-->
    <!--<int:channel id="request-channel"/>-->


    <int:channel id="in-channel"/>
    <int:channel id="out-channel"/>

    <!-- not delete Module GetWeather -->
   <!-- <int-http:inbound-gateway id="inbound"
                              request-channel="${inChannel}"
                              reply-channel="${outChannel}"
                              supported-methods="POST"
                              path="/getWeather"/>-->

    <int-webflux:inbound-gateway id="inbound" request-channel="${inChannel}"
                                 reply-channel="${outChannel}"
                                 auto-startup="true"
                                 path="getWeather"
                                 supported-methods="POST"/>

    <int:chain id="json2xml"
               input-channel="${inChannel}"
               output-channel="to-outbound-channel">
        <int:json-to-object-transformer object-mapper="customObjectMapper"
                                        type="com.caih.iexp.model.weatherRequest.GetWeather"/>
        <int-xml:marshalling-transformer marshaller="marshaller"
                                         result-type="StringResult"/>
        <int:service-activator id="headerWrapper"
                               ref="wsWrapper"
                               method="addHeader"/>
        <int-ws:header-enricher id="wsEnricher">
            <int-ws:soap-action value="http://WebXml.com.cn/getWeather"/>
        </int-ws:header-enricher>
    </int:chain>

    <int:channel id="to-outbound-channel"/>
    <int:channel id="from-outbound-channel"/>

    <int-ws:outbound-gateway id="outbound"
                             request-channel="to-outbound-channel"
                             reply-channel="from-outbound-channel"
                             uri="http://ws.webxml.com.cn/WebServices/WeatherWS.asmx"/>

    <int:chain id="xml2json" input-channel="from-outbound-channel" output-channel="${outChannel}">
        <int:service-activator id="rspChecker"
                               ref="xmlCheck"
                               method="check"/>
        <int-xml:unmarshalling-transformer unmarshaller="unmarshaller"/>
        <int:service-activator id="replyBeanBuilder"
                               ref="beanBuilder"
                               method="getJsonBean"/>
        <int:object-to-json-transformer id="bean2json"/>
    </int:chain>

    <bean id="customObjectMapper" class="com.caih.iexp.utils.objMapper.ObjectMapperFactory" factory-method="getMapper"/>

    <bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="packagesToScan" value="com.caih.iexp.model.weatherRequest"/>
        <!--<property name="marshallerProperties" value="#{T(com.caih.iexp.model.weatherRequest.MarshallerProperties).properties}"/>-->
        <!--<property name="classesToBeBound" value="com.caih.iexp.model.weatherRequest.GetWeather"/>-->
        <property name="marshallerProperties">
            <map>
                <entry key="#{T(javax.xml.bind.Marshaller).JAXB_FRAGMENT}" value="#{true}"/>
                <entry key="#{T(javax.xml.bind.Marshaller).JAXB_FORMATTED_OUTPUT}" value="#{true}"/>
            </map>
        </property>
    </bean>

    <bean id="wsWrapper" class="com.caih.iexp.utils.WsWrapper"/>

    <bean id="xmlCheck" class="com.caih.iexp.utils.XmlCheck"/>

    <bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <!--<property name="packagesToScan" value="com.caih.iexp.model.weatherResponse"/>-->
        <property name="classesToBeBound" value="com.caih.iexp.model.weatherResponse.GetWeatherResponse"/>
    </bean>

    <bean id="beanBuilder" class="com.caih.iexp.utils.BeanBuilder"/>
</beans>